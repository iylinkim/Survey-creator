{"version":3,"sources":["routes/Complete.jsx","store.jsx","components/Checkbox.jsx","components/MultiChoice.jsx","components/Textbox.jsx","components/Content.jsx","components/Question.jsx","routes/Home.jsx","app.jsx","index.js"],"names":["Complete","props","className","survey","createSlice","name","initialState","reducers","add_content","state","action","id","Date","now","payload","contents","push","remove_content","questionId","contentId","filtered","filter","cont","get_content","text","forEach","i","origin","add_question","title","desc","remove_question","target","Object","keys","key","updated","get_question_type","question_type","type","get_question_title","get_question_desc","store","configureStore","reducer","actions","connect","dispatch","ownProps","onDelete","data","getText","inputRef","useRef","onChange","current","value","ref","onClick","console","log","placeholder","addContent","option","map","question","getContent","getTitle","getDesc","getType","useState","setOption","titleRef","descRef","selectRef","e","currentTarget","selectOption","Array","from","childNodes","c","selected","innerText","window","confirm","addQuestion","inputValue","setInputValue","surveyTitleRef","surveySubTitleRef","history","useHistory","handleLoading","loading","document","createElement","innerHTML","style","height","outerHeight","parentNode","prepend","defaultValue","setTimeout","survey_title","survey_subTitle","App","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d440caf8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../scss/complete.scss\";\n\nconst Complete = (props) => {\n  return (\n    <div className=\"complete\">\n      <p className=\"complete_text\">제출이 완료되었습니다!</p>\n    </div>\n  );\n};\n\nexport default Complete;\n","import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nexport const survey = createSlice({\n  name: \"contentsReducer\",\n  initialState: {},\n  reducers: {\n    add_content: (state, action) => {\n      const id = Date.now();\n      state[action.payload].contents.push({ id });\n    },\n    remove_content: (state, action) => {\n      const { questionId, contentId } = action.payload;\n      const filtered = { ...state }[questionId].contents.filter(\n        (cont) => cont.id !== contentId\n      );\n\n      state[questionId] = {\n        ...{ ...state }[questionId],\n        contents: filtered,\n      };\n    },\n    get_content: (state, action) => {\n      const { questionId, contentId, text } = action.payload;\n      state[questionId].contents.forEach((cont, i, origin) => {\n        if (cont.id === contentId) {\n          origin[i] = { ...origin[i], text };\n        }\n      });\n    },\n\n    add_question: (state) => {\n      const id = Date.now();\n      state[id] = {\n        id,\n        title: \"\",\n        desc: \"\",\n        contents: [],\n      };\n    },\n    remove_question: (state, action) => {\n      const target = Object.keys(state).filter(\n        (key) => state[key].id === action.payload\n      )[0];\n      const updated = { ...state };\n      delete updated[target];\n      return updated;\n    },\n    get_question_type: (state, action) => {\n      state[action.payload.id] = {\n        ...state[action.payload.id],\n        question_type: action.payload.type,\n      };\n    },\n    get_question_title: (state, action) => {\n      state[action.payload.id] = {\n        ...state[action.payload.id],\n        title: action.payload.text,\n      };\n    },\n    get_question_desc: (state, action) => {\n      state[action.payload.id] = {\n        ...state[action.payload.id],\n        desc: action.payload.text,\n      };\n    },\n  },\n});\n\nconst store = configureStore({\n  reducer: survey.reducer,\n});\n\nexport const {\n  add_content,\n  remove_content,\n  add_question,\n  remove_question,\n  get_content,\n  get_question_type,\n  get_question_title,\n  get_question_desc,\n} = survey.actions;\n\nexport default store;\n","import React, { useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { remove_content, get_content } from \"../store\";\n\nconst Checkbox = ({ onDelete, getText, questionId, contentId }) => {\n  const inputRef = useRef();\n\n  const onClick = () => {\n    onDelete({ questionId, contentId });\n  };\n  const handleText = () => {\n    getText({ questionId, contentId, text: inputRef.current.value });\n  };\n  return (\n    <div className=\"content_wrap\">\n      <input type=\"checkbox\" className=\"radio_checkbox\" />\n      <input\n        type=\"text\"\n        className=\"content_text\"\n        onChange={handleText}\n        ref={inputRef}\n      />\n      <button className=\"content_del_btn\" onClick={onClick}>\n        -\n      </button>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    id: ownProps.id,\n    onDelete: (data) => dispatch(remove_content(data)),\n    getText: (data) => dispatch(get_content(data)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Checkbox);\n","import React, { useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { remove_content, get_content } from \"../store\";\n\nconst MultiChoice = ({ onDelete, getText, questionId, contentId }) => {\n  console.log(onDelete, getText, questionId, contentId)\n  const inputRef = useRef();\n\n  const onClick = () => {\n    onDelete({ questionId, contentId });\n  };\n\n  const handleText = () => {\n    getText({ questionId, contentId, text: inputRef.current.value });\n  };\n\n  return (\n    <div className=\"content_wrap\">\n      <input type=\"radio\" className=\"radio_checkbox\" />\n      <input\n        type=\"text\"\n        className=\"content_text\"\n        onChange={handleText}\n        ref={inputRef}\n      />\n      <button className=\"content_del_btn\" onClick={onClick}>\n        -\n      </button>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    id: ownProps.id,\n    onDelete: (data) => dispatch(remove_content(data)),\n    getText: (data) => dispatch(get_content(data)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(MultiChoice);\n","import React, { useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { get_content } from \"../store\";\n\nconst Textbox = ({ getText, questionId, contentId }) => {\n  const inputRef = useRef();\n\n  const handleText = () => {\n    getText({ questionId, contentId, text: inputRef.current.value });\n  };\n  return (\n    <div className=\"content_wrap\">\n      <input\n        className=\"content_text textbox\"\n        ref={inputRef}\n        type=\"text\"\n        placeholder=\"서베이를 하는 사람이 보는 칸 예제\"\n        onChange={handleText}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    id: ownProps.id,\n    getText: (data) => dispatch(get_content(data)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Textbox);\n","import Checkbox from \"./Checkbox\";\nimport MultiChoice from \"./MultiChoice\";\nimport Textbox from \"./Textbox\";\nimport { connect } from \"react-redux\";\nimport { add_content } from \"../store\";\nimport \"../scss/content.scss\";\n\nconst Content = ({ option, cont, addContent, questionId }) => {\n  const onClick = () => {\n    addContent(questionId);\n  };\n\n  return (\n    <div>\n      {option !== \"Textbox\" && (\n        <button onClick={onClick} className=\"add_content_btn\">\n          +\n        </button>\n      )}\n      {option !== \"Textbox\"\n        ? cont[questionId].contents.map((question) => {\n            return getContent(option, question, questionId, question.id);\n          })\n        : getContent(\n            option,\n            { id: Date.now() },\n            questionId,\n            { id: Date.now() }.id\n          )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { cont: state };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    id: ownProps.id,\n    addContent: (id) => dispatch(add_content(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Content);\n\nfunction getContent(option, props, id, contentId) {\n  switch (option) {\n    case \"MultiChoice\":\n      return (\n        <MultiChoice\n          {...props}\n          key={contentId}\n          questionId={id}\n          contentId={contentId}\n        />\n      );\n    case \"Checkbox\":\n      return (\n        <Checkbox\n          {...props}\n          key={contentId}\n          questionId={id}\n          contentId={contentId}\n        />\n      );\n    case \"Textbox\":\n      return (\n        <Textbox\n          {...props}\n          key={contentId}\n          questionId={id}\n          contentId={contentId}\n        />\n      );\n    default:\n      return (\n        <MultiChoice\n          {...props}\n          key={contentId}\n          questionId={id}\n          contentId={contentId}\n        />\n      );\n  }\n}\n","import React, { useRef, useState } from \"react\";\nimport Content from \"./Content\";\nimport \"../scss/question.scss\";\nimport {\n  get_question_type,\n  get_question_title,\n  get_question_desc,\n  remove_question,\n} from \"../store\";\nimport { connect } from \"react-redux\";\n\nconst Question = ({ onDelete, getType, getTitle, getDesc, id }) => {\n  const [option, setOption] = useState(\"MultiChoice\");\n\n  const titleRef = useRef();\n  const descRef = useRef();\n  const selectRef = useRef();\n\n  const optionChange = (e) => {\n    setOption(e.currentTarget.value);\n    const selectOption = Array.from(selectRef.current.childNodes).filter(\n      (c) => c.selected === true\n    )[0].innerText;\n    getType({ id, type: selectOption });\n  };\n\n  const handleTitle = () => {\n    getTitle({ id, text: titleRef.current.value });\n  };\n  const handleDesc = () => {\n    getDesc({ id, text: titleRef.current.value });\n  };\n\n  const onClick = () => {\n    const ok = window.confirm(\"이 항목을 지울까요?\");\n    ok && onDelete();\n  };\n\n  return (\n    <li className=\"question\">\n      <p className=\"question_title\">\n        <input\n          type=\"text\"\n          ref={titleRef}\n          placeholder=\"Question Text\"\n          onChange={handleTitle}\n        />\n      </p>\n      <p className=\"question_desc\">\n        <textarea\n          ref={descRef}\n          placeholder=\"input desc\"\n          onChange={handleDesc}\n        ></textarea>\n      </p>\n      <select ref={selectRef} onChange={optionChange} className=\"type_options\">\n        <option value=\"MultiChoice\">MultiChoice</option>\n        <option value=\"Checkbox\">Checkbox</option>\n        <option value=\"Textbox\">Textbox</option>\n      </select>\n      <Content option={option} questionId={id} />\n      <button onClick={onClick} className=\"question_del_btn\">\n        Remove\n      </button>\n    </li>\n  );\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    id: ownProps.id,\n    title: \"\",\n    onDelete: () => dispatch(remove_question(ownProps.id)),\n    getTitle: (data) => dispatch(get_question_title(data)),\n    getDesc: (data) => dispatch(get_question_desc(data)),\n    getType: (data) => dispatch(get_question_type(data)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Question);\n","import React, { useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Question from \"../components/Question\";\nimport \"../scss/home.scss\";\nimport { add_question } from \"../store\";\n\nconst Home = ({ data, addQuestion }) => {\n  const [inputValue, setInputValue] = useState(\"Initial value\");\n  const surveyTitleRef = useRef();\n  const surveySubTitleRef = useRef();\n  const history = useHistory();\n\n  const onChange = (e) => {\n    setInputValue(e.currentTarget.value);\n  };\n\n  const onSubmit = (e) => {\n    handleLoading(e.currentTarget);\n    setTimeout(() => history.push(\"/complete\"), 1500);\n    console.log({\n      survey_title: surveyTitleRef.current.value,\n      survey_subTitle: surveySubTitleRef.current.value,\n      data,\n    });\n  };\n\n  const handleLoading = (target) => {\n    const loading = document.createElement(\"div\");\n    loading.innerHTML = `<p class=\"spinner\"></p>`;\n    loading.className = \"loading\";\n    loading.style.height = `${window.outerHeight}px`;\n\n    target.parentNode.parentNode.prepend(loading);\n  };\n\n  console.log(\"home\");\n  return (\n    <div>\n      <h1 className=\"title\">\n        <span className=\"circle\"></span>\n        <span className=\"title_text\">TurnChat! Form</span>\n      </h1>\n      <section className=\"main_body\">\n        <div className=\"main_body_content\">\n          <div className=\"title_area\">\n            <div className=\"default_title\">\n              <textarea\n                ref={surveyTitleRef}\n                defaultValue=\"Default title\"\n              ></textarea>\n            </div>\n            <p className=\"default_value\">\n              <input\n                ref={surveySubTitleRef}\n                type=\"text\"\n                value={inputValue}\n                onChange={onChange}\n              />\n            </p>\n          </div>\n          <ul className=\"questions\">\n            {Object.keys(data).map((key) => (\n              <Question {...data[key]} key={key} />\n            ))}\n          </ul>\n        </div>\n        <div className=\"add_btn_area\">\n          <button onClick={addQuestion}>+</button>\n        </div>\n      </section>\n      <p className=\"submit_btn_area\">\n        <button className=\"submit_btn\" onClick={onSubmit}>\n          Submit\n        </button>\n      </p>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return { data: state };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addQuestion: () => dispatch(add_question()),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Complete from \"./routes/Complete\";\nimport Home from \"./routes/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/complete\">\n        <Complete />\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./app\";\nimport store from \"./store\";\nimport \"./scss/index.scss\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}